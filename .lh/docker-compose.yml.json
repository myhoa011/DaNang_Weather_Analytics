{
    "sourceFile": "docker-compose.yml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733412495976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733412495976,
            "name": "Commit-0",
            "content": "services:\r\n  redis:\r\n    container_name: redis_server\r\n    image: redis:7\r\n    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}\r\n    restart: always\r\n    environment:\r\n      - REDIS_PASSWORD=${REDIS_PASSWORD}\r\n    ports:\r\n      - \"6379:6379\"\r\n    volumes:\r\n      - redis_data:/data\r\n    networks:\r\n      - data_mining_network\r\n    healthcheck:\r\n      test: [\"CMD\", \"redis-cli\", \"-a\", \"${REDIS_PASSWORD}\", \"ping\"]\r\n      interval: 10s\r\n      timeout: 5s\r\n      retries: 5\r\n  mysql:\r\n    container_name: mysql_server\r\n    image: mysql:8.0\r\n    restart: always\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}\r\n      MYSQL_DATABASE: ${DB_NAME}\r\n    ports:\r\n      - \"6603:3306\"\r\n    volumes:\r\n      - mysql_data:/var/lib/mysql\r\n      - ./src/mysql/init_db:/docker-entrypoint-initdb.d\r\n      - ./src/mysql/config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf\r\n    networks:\r\n      - data_mining_network\r\n    healthcheck:\r\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\", \"-u\", \"root\", \"-p${DB_PASSWORD}\"]\r\n      interval: 10s\r\n      timeout: 5s\r\n      retries: 3\r\n      start_period: 30s\r\n  db_api:\r\n    container_name: db_api_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: db_api/Dockerfile\r\n    ports:\r\n      - \"8000:8000\"\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs\r\n    networks:\r\n      - data_mining_network\r\n    depends_on:\r\n      mysql:\r\n        condition: service_healthy\r\n      redis:\r\n        condition: service_healthy\r\n    env_file:\r\n      - ./.env\r\n    healthcheck:\r\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8000/health\"]\r\n      interval: 10s\r\n      timeout: 5s\r\n      retries: 5\r\n  crawl_data:\r\n    container_name: crawl_data_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: crawl_data/Dockerfile\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs  \r\n      - ./data:/app/data\r\n    networks:\r\n      - data_mining_network\r\n    env_file:\r\n      - ./.env\r\n  data_ingestion:\r\n    container_name: data_ingestion_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: data_ingestion/Dockerfile\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs\r\n      - ./data:/app/data\r\n    depends_on:\r\n      db_api:\r\n        condition: service_healthy\r\n    networks:\r\n      - data_mining_network\r\n    env_file:\r\n      - ./.env\r\n# backend\r\n  data_prediction:\r\n    container_name: data_prediction_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: backend/data_prediction/Dockerfile\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs\r\n    depends_on:\r\n      db_api:\r\n        condition: service_healthy\r\n    networks:\r\n      - data_mining_network\r\n    env_file:\r\n      - ./.env\r\n  data_analysis:\r\n    container_name: data_analysis_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: backend/data_analysis/Dockerfile\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs\r\n    depends_on:\r\n      db_api:\r\n        condition: service_healthy\r\n    networks:\r\n      - data_mining_network\r\n    env_file:\r\n      - ./.env\r\n  data_clustering:\r\n    container_name: data_clustering_server\r\n    restart: always\r\n    build:\r\n      context: src\r\n      dockerfile: backend/data_clustering/Dockerfile\r\n    volumes:\r\n      - ./logs:/app/logs\r\n      - ./configs:/app/configs\r\n    depends_on:\r\n      - db_api\r\n    networks:\r\n      - data_mining_network\r\n    env_file:\r\n      - ./.env\r\nnetworks:\r\n  data_mining_network:\r\n    driver: bridge\r\nvolumes:\r\n  mysql_data:\r\n  redis_data:\r\n"
        }
    ]
}